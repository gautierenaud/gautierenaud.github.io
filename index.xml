<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Renaud Gautier's Digital Garden on RGDG</title><link>https://gautierenaud.github.io/</link><description>Recent content in Renaud Gautier's Digital Garden on RGDG</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://gautierenaud.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>02-01 Project Skeleton - Local Kubernetes</title><link>https://gautierenaud.github.io/devops_sandbox/02-01-project-skeleton-local-kubernetes/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><guid>https://gautierenaud.github.io/devops_sandbox/02-01-project-skeleton-local-kubernetes/</guid><description>Description The goal of the following sections will be to set up a basic infrastructure that will be used as a base for further developments. As such, I will try to put in place a local Kubernetes (k8s) equivalent, on which I will deploy a PostgreSQL instance and a Kafka bus. I&amp;rsquo;ve chosen those 2 components because I&amp;rsquo;m used to them in my day-to-day work.
Installation of a k8s equivalent k8s is used in a lot of places, and I was looking forward to deepening my understanding of it.</description></item><item><title>02-02 Project Skeleton - Kafka</title><link>https://gautierenaud.github.io/devops_sandbox/02-02-project-skeleton-kafka/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><guid>https://gautierenaud.github.io/devops_sandbox/02-02-project-skeleton-kafka/</guid><description>Kafka What is one of the component I often use at work? You guessed it, Kafka. For those who don&amp;rsquo;t know, Kafka can be seen as a messaging system (the exact term is streaming platform), where some will publish messages (Producers) while others will process them (Consumers). It is made to scale, so it is obviously overkill for a personal project, but the goal was to experiment with it. Also, I will not delve here into the details of Kafka now (maybe when I tackle Observability?</description></item><item><title>02-03 Project Skeleton - PostgreSQL</title><link>https://gautierenaud.github.io/devops_sandbox/02-03-project-skeleton-postgresql/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><guid>https://gautierenaud.github.io/devops_sandbox/02-03-project-skeleton-postgresql/</guid><description>PostgreSQL I&amp;rsquo;ve chosen PostgreSQL for the same reason as Kafka: I&amp;rsquo;m used to it from my day-to-day work. I will also use a Statefulset for this deployment, but I&amp;rsquo;ll leave the redundancy for later. As with KRaft, I learned the hard way that redundancy is not magical, but that I need to configure it myself.
Service service.yaml
apiVersion: v1 kind: Service metadata: name: postgres-svc labels: app: postgres-app spec: clusterIP: None ports: - name: &amp;#39;5432&amp;#39; port: 5432 protocol: TCP targetPort: 5432 selector: app: postgres-app Again, a Headless service (as with Kafka).</description></item><item><title>01 Introduction</title><link>https://gautierenaud.github.io/devops_sandbox/01-introduction/</link><pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate><guid>https://gautierenaud.github.io/devops_sandbox/01-introduction/</guid><description>Hi, this is my personal sandbox project, where I&amp;rsquo;ll try to learn about different part that I attribute (perhaps wrongly) to DevOps. I&amp;rsquo;m more of a Dev than an Ops, so I wanted some time/playground to learn a bit more about the concepts that are dealt with on the Ops side.
The idea would be to learn about (thrown in random order, not exhaustive nor contractual):
observability traceability idempotency/replayability chaos engineering logs sidecars profiling security repo structure monorepo by component split deployment In order to learn all those different topics, I&amp;rsquo;ll try to create a dummy project with a simple architecture (some services, a bit of Pub/Sub buses and a database) and enhancing it bit by bit with the different concepts as I learn about them.</description></item></channel></rss>